{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useCallback,useState}from'react';import{Route,useRouteMatch}from'react-router-dom';import{useDispatch}from'react-redux';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Heading,LinkExternal,Flex}from'@pancakeswap-libs/uikit';import{BLOCKS_PER_YEAR}from'config';import FlexLayout from'components/layout/Flex';import Page from'components/layout/Page';import{useFarms,usePriceBnbBusd,usePriceCakeBusd}from'state/hooks';import useRefresh from'hooks/useRefresh';import{fetchFarmUserDataAsync}from'state/actions';import{QuoteToken}from'config/constants/types';import useI18n from'hooks/useI18n';import FarmCard from'./components/FarmCard/FarmCard';import FarmTabButtons from'./components/FarmTabButtons';import Divider from'./components/Divider';import fib from'./fib.png';var Farms=function Farms(farmsProps){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var farmsLP=useFarms();var cakePrice=usePriceCakeBusd();var bnbPrice=usePriceBnbBusd();var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var tokenMode=farmsProps.tokenMode;var dispatch=useDispatch();var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){if(account){dispatch(fetchFarmUserDataAsync(account));}},[account,dispatch,fastRefresh]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stakedOnly=_useState2[0],setStakedOnly=_useState2[1];var activeFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier!=='0X'&&farm.pid!==8;});var inactiveFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier==='0X'&&farm.pid!==8;});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});// /!\\ This function will be removed soon\n// This function compute the APY for each farm and will be replaced when we have a reliable API\n// to retrieve assets prices against USD\nvar farmsList=useCallback(function(farmsToDisplay,removed){// const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n// let userTotalTVL = new BigNumber(0);\n// let userAllowance = 0;\nvar farmsToDisplayWithAPY=farmsToDisplay.map(function(farm){// if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n//   return farm\n// }\nvar cakeRewardPerBlock=new BigNumber(farm.honestPerBlock||1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18));var cakeRewardPerYear=cakeRewardPerBlock.times(BLOCKS_PER_YEAR);// if (farm.userData) {\n//   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\n//   userTotalTVL = userTotalTVL.plus(userShare)\n//   const userWL = Whitelist.find(add => add.wallet === account);\n//   userAllowance = userWL.allowance\n// }\nvar apy=cakePrice.times(cakeRewardPerYear);var totalValue=new BigNumber(farm.lpTotalInQuoteToken||0);if(farm.quoteTokenSymbol===QuoteToken.BNB){totalValue=totalValue.times(bnbPrice);}if(totalValue.comparedTo(0)>0){apy=apy.div(totalValue);}return _objectSpread(_objectSpread({},farm),{},{apy:apy});});return farmsToDisplayWithAPY.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,removed:removed,bnbPrice:bnbPrice,cakePrice:cakePrice,ethereum:ethereum,account:account},farm.pid);});},[bnbPrice,account,cakePrice,ethereum]);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"lg\",color:\"primary\",mb:\"50px\",style:{textAlign:'center'},children:tokenMode?'Stake tokens to earn honest':'Stake LP tokens to earn honest'}),/*#__PURE__*/_jsx(Heading,{as:\"h2\",color:\"secondary\",mb:\"50px\",style:{textAlign:'center'},children:\"Farms and Pools allocPoints and EmissionPerBlock are following a distribuition modulated by functions based on the fibonnacci sequence meaning they start super low ang go insane with time!!\"}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"row\",mb:\"35px\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",color:\"secondary\",mb:\"50px\",style:{textAlign:'right'},children:\"Check the daily apr evolution:\"}),/*#__PURE__*/_jsx(LinkExternal,{mb:\"5px\",style:{textAlign:'center'},small:true,href:\"https://honestwork.gitbook.io/honestwork-farms/farms-pools/farm-pumpamentals\",children:/*#__PURE__*/_jsx(\"img\",{width:\"233\",src:fib,alt:\"fib\"})})]}),/*#__PURE__*/_jsx(Heading,{as:\"h2\",color:\"secondary\",mb:\"50px\",style:{textAlign:'center'},children:\"Deposit Fees will be used for buy backs\"}),/*#__PURE__*/_jsx(FarmTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:stakedOnly?farmsList(stakedOnlyFarms,false):farmsList(activeFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:farmsList(inactiveFarms,true)})]})]})]});};export default Farms;","map":{"version":3,"sources":["/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useDispatch","BigNumber","useWallet","Heading","LinkExternal","Flex","BLOCKS_PER_YEAR","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","FarmCard","FarmTabButtons","Divider","fib","Farms","farmsProps","path","TranslateString","farmsLP","cakePrice","bnbPrice","account","ethereum","tokenMode","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","pid","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","honestPerBlock","times","poolWeight","div","pow","cakeRewardPerYear","apy","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","comparedTo","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading,LinkExternal,Flex } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\nimport fib from './fib.png';\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => { \n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      // let userTotalTVL = new BigNumber(0);\n      // let userAllowance = 0;\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.honestPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        // if (farm.userData) {\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\n        //   userTotalTVL = userTotalTVL.plus(userShare)\n        //   const userWL = Whitelist.find(add => add.wallet === account);\n        //   userAllowance = userWL.allowance\n        // }\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {\n          tokenMode ?\n            'Stake tokens to earn honest'\n            :\n          'Stake LP tokens to earn honest'\n        }\n      </Heading>\n    \n    \n     \n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Farms and Pools allocPoints and EmissionPerBlock are following a distribuition modulated by functions based on the fibonnacci sequence\n       meaning they start super low ang go insane with time!!\n      </Heading>\n      \n      \n        \n          <Flex flexDirection=\"row\" mb=\"35px\">\n          <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'right' }}>\n        Check the daily apr evolution:\n      </Heading>\n          <LinkExternal mb=\"5px\" \nstyle={{ textAlign: 'center' }} small href=\"https://honestwork.gitbook.io/honestwork-farms/farms-pools/farm-pumpamentals\">\n  \n          <img  width=\"233\"  src={ fib } alt=\"fib\"/>\n          </LinkExternal>\n          </Flex>\n          <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Deposit Fees will be used for buy backs\n      </Heading>\n    \n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n         \n            {/* <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n              COMING SOON...\n            </Heading> */}\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {/* <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n              COMING SOON...\n            </Heading> */}\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n    </Page>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}