{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useState}from'react';import{Button,Modal}from'@pancakeswap-libs/uikit';import ModalActions from'components/ModalActions';import TokenInput from'../../../components/TokenInput';import useI18n from'../../../hooks/useI18n';import{getFullDisplayBalance}from'../../../utils/formatBalance';var DepositModal=function DepositModal(_ref){var max=_ref.max,onConfirm=_ref.onConfirm,onDismiss=_ref.onDismiss,_ref$tokenName=_ref.tokenName,tokenName=_ref$tokenName===void 0?'':_ref$tokenName;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pendingTx=_useState4[0],setPendingTx=_useState4[1];var TranslateString=useI18n();var fullBalance=useMemo(function(){return getFullDisplayBalance(max);},[max]);// console.log(\"depositFeeBP\",burnFeeBP)\nvar handleChange=useCallback(function(e){setVal(e.currentTarget.value);},[setVal]);var handleSelectMax=useCallback(function(){setVal(fullBalance);},[fullBalance,setVal]);return/*#__PURE__*/_jsxs(Modal,{title:\"\".concat(TranslateString(316,'Deposit'),\" \").concat(tokenName,\" Tokens\"),onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(TokenInput,{value:val,onSelectMax:handleSelectMax,onChange:handleChange,max:fullBalance,symbol:tokenName// burnFee={burnFeeBP}\n}),/*#__PURE__*/_jsxs(ModalActions,{children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"secondary\",onClick:onDismiss,children:TranslateString(462,'Cancel')}),/*#__PURE__*/_jsx(Button,{fullWidth:true,disabled:pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onConfirm(val);case 3:setPendingTx(false);onDismiss();case 5:case\"end\":return _context.stop();}}},_callee);})),children:pendingTx?TranslateString(488,'Pending Confirmation'):TranslateString(464,'Confirm')})]})]});};export default DepositModal;","map":{"version":3,"sources":["/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Pools/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","DepositModal","max","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":"slBACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,QAAtC,KAAsD,OAAtD,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,yBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,qBAAT,KAAsC,8BAAtC,CAUA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAmD,IAAhDC,CAAAA,GAAgD,MAAhDA,GAAgD,CAA3CC,SAA2C,MAA3CA,SAA2C,CAAhCC,SAAgC,MAAhCA,SAAgC,qBAArBC,SAAqB,CAArBA,SAAqB,yBAAT,EAAS,8BAC7EX,QAAQ,CAAC,EAAD,CADqE,wCAC5FY,GAD4F,eACvFC,MADuF,8BAEjEb,QAAQ,CAAC,KAAD,CAFyD,yCAE5Fc,SAF4F,eAEjFC,YAFiF,eAGnG,GAAMC,CAAAA,eAAe,CAAGX,OAAO,EAA/B,CACA,GAAMY,CAAAA,WAAW,CAAGlB,OAAO,CAAC,iBAAMO,CAAAA,qBAAqB,CAACE,GAAD,CAA3B,EAAD,CAAmC,CAACA,GAAD,CAAnC,CAA3B,CAEA;AAEA,GAAMU,CAAAA,YAAY,CAAGpB,WAAW,CAC9B,SAACqB,CAAD,CAA0C,CACxCN,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN,CACD,CAH6B,CAI9B,CAACR,MAAD,CAJ8B,CAAhC,CAOA,GAAMS,CAAAA,eAAe,CAAGxB,WAAW,CAAC,UAAM,CACxCe,MAAM,CAACI,WAAD,CAAN,CACD,CAFkC,CAEhC,CAACA,WAAD,CAAcJ,MAAd,CAFgC,CAAnC,CAIA,mBACE,MAAC,KAAD,EAAO,KAAK,WAAKG,eAAe,CAAC,GAAD,CAAM,SAAN,CAApB,aAAwCL,SAAxC,WAAZ,CAAwE,SAAS,CAAED,SAAnF,wBACE,KAAC,UAAD,EACE,KAAK,CAAEE,GADT,CAEE,WAAW,CAAEU,eAFf,CAGE,QAAQ,CAAEJ,YAHZ,CAIE,GAAG,CAAED,WAJP,CAKE,MAAM,CAAEN,SACR;AANF,EADF,cASE,MAAC,YAAD,yBACE,KAAC,MAAD,EAAQ,SAAS,KAAjB,CAAkB,OAAO,CAAC,WAA1B,CAAsC,OAAO,CAAED,SAA/C,UACGM,eAAe,CAAC,GAAD,CAAM,QAAN,CADlB,EADF,cAIE,KAAC,MAAD,EACE,SAAS,KADX,CAEE,QAAQ,CAAEF,SAFZ,CAGE,OAAO,sEAAE,mIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,sBAEDN,CAAAA,SAAS,CAACG,GAAD,CAFR,QAGPG,YAAY,CAAC,KAAD,CAAZ,CACAL,SAAS,GAJF,sDAAF,EAHT,UAUGI,SAAS,CAAGE,eAAe,CAAC,GAAD,CAAM,sBAAN,CAAlB,CAAkDA,eAAe,CAAC,GAAD,CAAM,SAAN,CAV7E,EAJF,GATF,GADF,CA6BD,CAhDD,CAkDA,cAAeT,CAAAA,YAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  burnFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\n\n  // console.log(\"depositFeeBP\",burnFeeBP)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        // burnFee={burnFeeBP}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n"]},"metadata":{},"sourceType":"module"}