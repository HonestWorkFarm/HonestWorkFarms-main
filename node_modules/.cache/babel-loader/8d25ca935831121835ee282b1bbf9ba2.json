{"ast":null,"code":"import _regeneratorRuntime from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mike/Documents/Work/repos/HonestWorkFarms-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,updateUserStakedBalance,updateUserBalance,updateUserPendingReward}from'state/actions';import{unstake,smartChefUnstake}from'utils/callHelpers';import{useMasterchef,useSmartChef}from'./useContract';var useUnstake=function useUnstake(pid){var dispatch=useDispatch();var _useWallet=useWallet(),account=_useWallet.account;var masterChefContract=useMasterchef();var handleUnstake=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return unstake(masterChefContract,pid,amount,account);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));console.info(txHash);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[account,dispatch,masterChefContract,pid]);return{onUnstake:handleUnstake};};export var useSmartUnstake=function useSmartUnstake(sousId){var dispatch=useDispatch();var _useWallet2=useWallet(),account=_useWallet2.account;var smartChefContract=useSmartChef(sousId);var handleUnstake=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return smartChefUnstake(smartChefContract,amount,account);case 2:dispatch(updateUserStakedBalance(String(sousId),account));dispatch(updateUserBalance(String(sousId),account));dispatch(updateUserPendingReward(String(sousId),account));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),[account,dispatch,smartChefContract,sousId]);return{onUnstake:handleUnstake};};export default useUnstake;","map":{"version":3,"sources":["/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/hooks/useUnstake.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","unstake","smartChefUnstake","useMasterchef","useSmartChef","useUnstake","pid","dispatch","account","masterChefContract","handleUnstake","amount","txHash","console","info","onUnstake","useSmartUnstake","sousId","smartChefContract","String"],"mappings":"mVAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OACEC,sBADF,CAEEC,uBAFF,CAGEC,iBAHF,CAIEC,uBAJF,KAKO,eALP,CAMA,OAASC,OAAT,CAAkBC,gBAAlB,KAA0C,mBAA1C,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,eAA5C,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAiB,CAClC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADkC,eAEdD,SAAS,EAFK,CAE1Ba,OAF0B,YAE1BA,OAF0B,CAGlC,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CAEA,GAAMO,CAAAA,aAAa,CAAGhB,WAAW,0FAC/B,iBAAOiB,MAAP,mJACuBV,CAAAA,OAAO,CAACQ,kBAAD,CAAqBH,GAArB,CAA0BK,MAA1B,CAAkCH,OAAlC,CAD9B,QACQI,MADR,eAEEL,QAAQ,CAACV,sBAAsB,CAACW,OAAD,CAAvB,CAAR,CACAK,OAAO,CAACC,IAAR,CAAaF,MAAb,EAHF,sDAD+B,+DAM/B,CAACJ,OAAD,CAAUD,QAAV,CAAoBE,kBAApB,CAAwCH,GAAxC,CAN+B,CAAjC,CASA,MAAO,CAAES,SAAS,CAAEL,aAAb,CAAP,CACD,CAfD,CAiBA,MAAO,IAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAoB,CACjD,GAAMV,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADiD,gBAE7BD,SAAS,EAFoB,CAEzCa,OAFyC,aAEzCA,OAFyC,CAGjD,GAAMU,CAAAA,iBAAiB,CAAGd,YAAY,CAACa,MAAD,CAAtC,CAEA,GAAMP,CAAAA,aAAa,CAAGhB,WAAW,2FAC/B,kBAAOiB,MAAP,6IACQT,CAAAA,gBAAgB,CAACgB,iBAAD,CAAoBP,MAApB,CAA4BH,OAA5B,CADxB,QAEED,QAAQ,CAACT,uBAAuB,CAACqB,MAAM,CAACF,MAAD,CAAP,CAAiBT,OAAjB,CAAxB,CAAR,CACAD,QAAQ,CAACR,iBAAiB,CAACoB,MAAM,CAACF,MAAD,CAAP,CAAiBT,OAAjB,CAAlB,CAAR,CACAD,QAAQ,CAACP,uBAAuB,CAACmB,MAAM,CAACF,MAAD,CAAP,CAAiBT,OAAjB,CAAxB,CAAR,CAJF,wDAD+B,iEAO/B,CAACA,OAAD,CAAUD,QAAV,CAAoBW,iBAApB,CAAuCD,MAAvC,CAP+B,CAAjC,CAUA,MAAO,CAAEF,SAAS,CAAEL,aAAb,CAAP,CACD,CAhBM,CAkBP,cAAeL,CAAAA,UAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, smartChefUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSmartChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSmartUnstake = (sousId: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await smartChefUnstake(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n      dispatch(updateUserPendingReward(String(sousId), account))\n    },\n    [account, dispatch, smartChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n"]},"metadata":{},"sourceType":"module"}