{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeStats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Heading, Text, LinkExternal } from '@pancakeswap-libs/uikit';\nimport BigNumber from 'bignumber.js/bignumber';\nimport styled from 'styled-components';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance';\nimport useI18n from 'hooks/useI18n';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport CardValue from './CardValue';\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks';\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  background-image: url('/images/egg/stats.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n    min-width: 10%;\n  min-height: 10%;\n  width: 100%;\n  height: auto;\n  \n  \n  \n`;\n_c = StyledCakeStats;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n_c2 = Row;\nconst token = getCakeAddress();\n\nconst CakeStats = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const farms = useFarms();\n  const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = eggPrice.times(circSupply);\n  let honestPerBlock = 0;\n  const burnValue = eggPrice.times(burnedBalance);\n  const cakePrice = usePriceCakeBusd();\n\n  if (farms && farms[0] && farms[0].honestPerBlock) {\n    honestPerBlock = new BigNumber(farms[0].honestPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledCakeStats, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"\\uD83D\\uDE9C Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"honest Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: eggPrice.toNumber(),\n          decimals: 2,\n          prefix: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Total Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: getBalanceNumber(totalSupply)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Circulating Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), cakeSupply && /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: cakeSupply,\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Tokens to be farmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(burnedBalance),\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: TranslateString(999, 'Market Cap')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          fontSize: \"14px\",\n          value: getBalanceNumber(marketCap),\n          decimals: 0,\n          prefix: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \" \\uD83D\\uDE9C/block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: honestPerBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          mb: \"20px\",\n          small: true,\n          href: `https://polygonscan.com/token/${token}`,\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeStats, \"9zlyTy0HCPBZPmDaDSkcQcIa9co=\", false, function () {\n  return [useI18n, useTotalSupply, useBurnedBalance, useFarms, usePriceCakeBusd, usePriceCakeBusd];\n});\n\n_c3 = CakeStats;\nexport default CakeStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCakeStats\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"CakeStats\");","map":{"version":3,"sources":["/home/mike/Documents/Work/repos/HonestWorkFarms-main/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","LinkExternal","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","token","CakeStats","TranslateString","totalSupply","burnedBalance","farms","eggPrice","circSupply","minus","cakeSupply","marketCap","times","honestPerBlock","burnValue","cakePrice","pow","toNumber"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,YAAxC,QAA4D,yBAA5D;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA4D,sBAA5D;AAEA,MAAMC,eAAe,GAAGT,MAAM,CAACN,IAAD,CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMe,e;AAgBN,MAAMC,GAAG,GAAGV,MAAM,CAACW,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,G;AAQN,MAAME,KAAK,GAAGP,cAAc,EAA5B;;AAEA,MAAMQ,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,eAAe,GAAGV,OAAO,EAA/B;AACA,QAAMW,WAAW,GAAGb,cAAc,EAAlC;AACA,QAAMc,aAAa,GAAGb,gBAAgB,CAACE,cAAc,EAAf,CAAtC;AACA,QAAMY,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMW,QAAQ,GAAGV,gBAAgB,EAAjC;AACA,QAAMW,UAAU,GAAGJ,WAAW,GAAGA,WAAW,CAACK,KAAZ,CAAkBJ,aAAlB,CAAH,GAAsC,IAAIjB,SAAJ,CAAc,CAAd,CAApE;AACA,QAAMsB,UAAU,GAAGpB,gBAAgB,CAACkB,UAAD,CAAnC;AACA,QAAMG,SAAS,GAAGJ,QAAQ,CAACK,KAAT,CAAeJ,UAAf,CAAlB;AACA,MAAIK,cAAc,GAAG,CAArB;AACA,QAAMC,SAAS,GAAGP,QAAQ,CAACK,KAAT,CAAeP,aAAf,CAAlB;AACA,QAAMU,SAAS,GAAGlB,gBAAgB,EAAlC;;AACA,MAAGS,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAAL,CAASO,cAAjC,EAAgD;AAC9CA,IAAAA,cAAc,GAAG,IAAIzB,SAAJ,CAAckB,KAAK,CAAC,CAAD,CAAL,CAASO,cAAvB,EAAuCb,GAAvC,CAA2C,IAAIZ,SAAJ,CAAc,EAAd,EAAkB4B,GAAlB,CAAsB,EAAtB,CAA3C,EAAsEC,QAAtE,EAAjB;AACD;;AAED,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAEV,QAAQ,CAACU,QAAT,EAAlC;AAAuD,UAAA,QAAQ,EAAE,CAAjE;AAAoE,UAAA,MAAM,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,QAAQ,EAAC,MAApB;AAAA,oBAA4B3B,gBAAgB,CAACc,WAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAYE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGM,UAAU,iBAAI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAEA,UAAlC;AAA8C,UAAA,QAAQ,EAAE;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAgBE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAEpB,gBAAgB,CAACe,aAAD,CAAlD;AAAmE,UAAA,QAAQ,EAAE;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqBE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA,oBAAuBF,eAAe,CAAC,GAAD,EAAM,YAAN;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAEb,gBAAgB,CAACqB,SAAD,CAAlD;AAA+D,UAAA,QAAQ,EAAE,CAAzE;AAA4E,UAAA,MAAM,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAyBE,QAAC,GAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,QAAQ,EAAC,MAApB;AAAA,oBAA4BE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA6BE,QAAC,GAAD;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAC,MAAjB;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,IAAI,EAAG,iCAAgCZ,KAAM,EAA3E;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAvDD;;GAAMC,S;UACoBT,O,EACJF,c,EACEC,gB,EACRI,Q,EACGC,gB,EAMCA,gB;;;MAXdK,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Heading, Text, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms, usePriceCakeBusd, usePriceCakeBnb } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  background-image: url('/images/egg/stats.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n    min-width: 10%;\n  min-height: 10%;\n  width: 100%;\n  height: auto;\n  \n  \n  \n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst token = getCakeAddress();\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms();\n  const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = eggPrice.times(circSupply);\n  let honestPerBlock = 0;\n  const burnValue = eggPrice.times(burnedBalance);\n  const cakePrice = usePriceCakeBusd();\n  if(farms && farms[0] && farms[0].honestPerBlock){\n    honestPerBlock = new BigNumber(farms[0].honestPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n        🚜 Stats\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">honest Price</Text>\n          <CardValue fontSize=\"14px\" value={eggPrice.toNumber()} decimals={2} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Total Supply</Text>\n          <Text bold fontSize=\"14px\">{getBalanceNumber(totalSupply)}</Text>\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Circulating Supply</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">Tokens to be farmed</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        \n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\"> 🚜/block</Text>\n          <Text bold fontSize=\"14px\">{honestPerBlock}</Text>\n        </Row>\n        <Row>\n          <LinkExternal mb=\"20px\" small href={`https://polygonscan.com/token/${token}`}>\n            {token}\n          </LinkExternal>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n"]},"metadata":{},"sourceType":"module"}